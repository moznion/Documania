package Documania;
use 5.008005;
use strict;
use warnings;
use utf8;
use Carp ();
use FindBin;
use Text::Xslate;
use Documania::Module;
use Class::Accessor::Lite (
    new => 0,
    rw  => [qw/base_dir template syntax/],
);

our $VERSION = "0.01";

use constant DEFAULT_TEMPLATE => <<'...';
# API docs

This documentation was generated by `[% generator %]`.

[% FOR module IN modules %]
## [% module.description || module.name %]
[% FOR method IN module.methods %]
### [% method.title || method.path %]

    [% method.http_method %] [% method.path %]

[% method.comment %]
[% END %]
[% END %]
...

sub new {
    my ($class, $args) = @_;

    bless {
        base_dir => $args->{base_dir} || $FindBin::Bin,
        syntax   => $args->{syntax}   || 'TTerse',
        template => $args->{template} || DEFAULT_TEMPLATE,
    }, $class;
}

sub generate {
    my ($self, $output_path) = @_;

    Carp::croak("[ERROR] Output file path is required") unless $output_path;
    my $xslate = Text::Xslate->new(syntax => $self->syntax);
    my $content = $xslate->render_string($self->template, +{
        modules   => $self->modules,
        generator => $0,
    });
    $self->_spew_utf8($output_path, $content);
}

sub _spew_utf8 {
    my ($self, $fname, $content) = @_;

    open my $fh, '>:encoding(utf-8)', $fname
        or Carp::croak("Can't open '$fname' for writing: '$!'");
    print {$fh} $content;
}

1;
__END__

=encoding utf-8

=head1 NAME

Documania - It's new $module

=head1 SYNOPSIS

    use Documania;

=head1 DESCRIPTION

Documania is ...

=head1 LICENSE

Copyright (C) moznion.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=head1 AUTHOR

moznion E<lt>moznion@gmail.comE<gt>

=cut

